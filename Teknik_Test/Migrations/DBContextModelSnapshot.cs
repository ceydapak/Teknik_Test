// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teknik_Test.Data;

#nullable disable

namespace TeknikTest.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teknik_Test.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("F_Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Onay_Durumu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("S_I_Bas_Saati")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("S_I_Bit_Saati")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("Teknik_Test.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("S_Tarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("S_Veren_Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirmaID");

                    b.HasIndex("UrunID");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Teknik_Test.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaID")
                        .HasColumnType("int");

                    b.Property<int>("Fiyati")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<string>("U_Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaID");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Teknik_Test.Siparis", b =>
                {
                    b.HasOne("Teknik_Test.Firma", "Firma")
                        .WithMany("Siparis")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teknik_Test.Urun", "Urun")
                        .WithMany("Siparis")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Teknik_Test.Urun", b =>
                {
                    b.HasOne("Teknik_Test.Firma", "Firma")
                        .WithMany("Urun")
                        .HasForeignKey("FirmaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("Teknik_Test.Firma", b =>
                {
                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Teknik_Test.Urun", b =>
                {
                    b.Navigation("Siparis");
                });
#pragma warning restore 612, 618
        }
    }
}
